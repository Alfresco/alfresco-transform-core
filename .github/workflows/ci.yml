name: Alfresco Transform Core CI

on:
  push:
    branches:
      - feature/**
      - fix/**
      - ATS-**
      - ACS-**
      - MNT-**
  pull_request:
    branches:
      - master
      - feature/**
      - fix/**
      - SP/**
      - HF/**
      - ATS-**
      - ACS-**
      - MNT-**
  schedule:
    - cron: '0 5 * * 1'
  workflow_call:
  workflow_dispatch:

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
  GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}

jobs:
  veracode:
    name: "Veracode - Source Clear Scan (SCA)"
    runs-on: ubuntu-latest
    if: >
      github.ref_name == 'master' || 
      github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.32.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.32.0
      - name: "Before install"
        run: bash _ci/init.sh
      - uses: Alfresco/alfresco-build-tools/.github/actions/veracode@v1.32.0
        with:
          srcclr-api-token: ${{ secrets.SRCCLR_API_TOKEN }}

  build_and_test:
    name: "Core & Base Snapshot deployment"
    runs-on: ubuntu-latest
    if: >
      github.ref_name == 'master' && 
      github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.32.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.32.0
      - name: "Before install"
        run: bash _ci/init.sh
      - name: "Install"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B -U -q clean install -DadditionalOption=-Xdoclint:none -DskipTests -Dmaven.javadoc.skip=true -Dmaven.wagon.http.pool=false -Pbase
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: mvn -B -U clean deploy -DadditionalOption=-Xdoclint:none -Dmaven.javadoc.skip=true -Dmaven.wagon.http.pool=false -Pbase

  all_tests_matrix:
    name: ${{ matrix.testName }}
    runs-on: ubuntu-latest
    if: always()
    strategy:
      fail-fast: false
      matrix:
        include:
          - testName: ImageMagick
            buildProfile: imagemagick
            testProfile: imagemagick
          - testName: LibreOffice
            buildProfile: libreoffice
            testProfile: libreoffice
          - testName: Transform Misc
            buildProfile: misc
            testProfile: misc
          - testName: PDF Renderer
            buildProfile: pdf-renderer
            testProfile: pdf-renderer
          - testName: Tika
            buildProfile: tika
            testProfile: tika
          - testName: All in One Transformer
            buildProfile: full-build
            testProfile: aio-test
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.32.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.32.0
      - name: "Before install"
        run: bash _ci/init.sh
      - name: "Install"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash _ci/build.sh ${{ matrix.buildProfile }}
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash _ci/test.sh ${{ matrix.testProfile }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [veracode, build_and_test, all_tests_matrix]
    if: >
      !failure() &&
      contains(github.event.head_commit.message, '[release]') &&
      github.event_name != 'pull_request' &&
      (github.ref_name == 'master' || github.ref_name == 'SP/' || github.ref_name == 'HF/')
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.32.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.32.0
      - name: "Init"
        run: bash ./scripts/ci/init.sh
      - uses: Alfresco/alfresco-build-tools/.github/actions/configure-git-author@v1.32.0
        with:
          username: ${{ env.GIT_USERNAME }}
          email: ${{ env.GIT_EMAIL }}
          global: true
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Release"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: bash _ci/release.sh
