name: Alfresco Transform Core CI

on:
  push:
    branches:
      - feature/**
  workflow_call:
  workflow_dispatch:

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  GITHUB_ACTIONS_DEPLOY_TIMEOUT: 60
  JAVA_VERSION: "17"
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}

jobs:
  veracode:
    name: "Veracode - Source Clear Scan (SCA)"
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.30.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.30.0
      - name: "Before install"
        run: |
          bash _ci/init.sh
      - uses: Alfresco/alfresco-build-tools/.github/actions/veracode@v1.30.0
        with:
          srcclr-api-token: ${{ secrets.SRCCLR_API_TOKEN }}

  build_and_test:
    name: "Core & Base Snapshot deployment"
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.30.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.30.0
      - name: "Before install"
        run: |
          bash _ci/init.sh
      - name: "Install"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          mvn -B -U -q clean install -DadditionalOption=-Xdoclint:none -DskipTests -Dmaven.javadoc.skip=true -Dmaven.wagon.http.pool=false -Pbase
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          mvn -B -U clean deploy -DadditionalOption=-Xdoclint:none -Dmaven.javadoc.skip=true -Dmaven.wagon.http.pool=false -Pbase

  all_tests_matrix:
    name: ${{ matrix.testName }}
    runs-on: ubuntu-latest
    if: always()
    strategy:
      fail-fast: false
      matrix:
        include:
          - testName: ImageMagick
            testPackage: imagemagick
          - testName: LibreOffice
            testPackage: libreoffice
          - testName: Transform Misc
            testPackage: misc
          - testName: PDF Renderer
            testPackage: pdf-renderer
          - testName: Tika
            testPackage: tika
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.30.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.30.0
      - name: "Before install"
        run: |
          bash _ci/init.sh
      - name: "Install"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash _ci/build.sh ${{ matrix.testPackage }}
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash _ci/test.sh ${{ matrix.testPackage }}

  all_in_one_transformer:
    name: "All in One Transformer"
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v1.30.0
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.30.0
      - name: "Before install"
        run: |
          bash _ci/init.sh
      - name: "Install"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash _ci/build.sh full-build
      - name: "Before script"
        run: bash _ci/cache_artifacts.sh
      - name: "Run tests"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash _ci/test.sh aio-test
